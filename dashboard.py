# dashboard.py
import streamlit as st
import pandas as pd
import os
import time

st.set_page_config(page_title="Classroom Summary", layout="centered")
st.title("🎓 Focus Summary Report")

# Session timer (for display only)
if "start_time" not in st.session_state:
    st.session_state.start_time = time.time()
elapsed = int(time.time() - st.session_state.start_time)
mins, secs = divmod(elapsed, 60)
st.sidebar.markdown(f"🕒 **Session Time:** {mins} min {secs} sec")

# Check for summary file
if not os.path.exists("attendance_summary.csv"):
    st.warning("⚠️ Waiting for attendance_summary.csv to be generated by the camera script...")
    st.stop()

# Load summary
df = pd.read_csv("attendance_summary.csv")

st.subheader("📋 Attendance and Focus Summary")
st.dataframe(df, use_container_width=True)

# Metrics
col1, col2, col3 = st.columns(3)
with col1:
    st.metric("👥 Students Logged", df.shape[0])
with col2:
    avg_focus = round(df["FocusPercentage"].mean(), 2)
    st.metric("📊 Avg Focus %", f"{avg_focus}%")
with col3:
    max_focus = df.loc[df["FocusPercentage"].idxmax()]
    st.metric("🏆 Most Focused", f"{max_focus['Name']} ({max_focus['FocusPercentage']}%)")

# Optional: Bar chart summary
if st.checkbox("📈 Show focus chart"):
    st.bar_chart(df.set_index("Name")["FocusPercentage"])

st.success("Session summary loaded. Run `face_track.py` and close with `q` to update.")
